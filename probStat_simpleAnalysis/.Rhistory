## Confidence Interval 99 pH : Potability = 0 ##
CI_pH_Pot0_99_mean = c()
CI_pH_Pot0_99_lower = c()
CI_pH_Pot0_99_upper = c()
Arr_sample_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_pH = sample(data_Pot0_no_out$pH,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_pH))
Arr_sample_SD[a] = c(sd(sample_pH))
Arr_sample_Mean[a] = c(mean(sample_pH))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_pH_Pot0_99_lower[b]= getCI(cl99,nsamples,Arr_sample_AVG[[b]])[1]
CI_pH_Pot0_99_upper[b]= getCI(cl99,nsamples,Arr_sample_AVG[[b]])[2]
CI_pH_Pot0_99_mean[b] = mean(Arr_sample_Mean[b])
}
CI_pH_Pot0_99 = data.frame(S_round,CI_pH_Pot0_99_mean,CI_pH_Pot0_99_lower,CI_pH_Pot0_99_upper)
qplot(
x = CI_pH_Pot0_99_mean,
y = S_round,
color = S_round,
data = CI_pH_Pot0_99,main = "Confidence Interval (CI) of Mean (99) : Average pH of Non-Drinkable Water",
xlab = "Average pH",
ylab = "Round"
)+geom_errorbar(aes(xmin = CI_pH_Pot0_99_lower, xmax = CI_pH_Pot0_99_upper, width = 1)) + geom_vline(xintercept = pop_pot0_ph_mean)
## Confidence Interval 99 pH : Potability = 1 ##
CI_pH_Pot1_99_mean = c()
CI_pH_Pot1_99_lower = c()
CI_pH_Pot1_99_upper = c()
Arr_sample_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_pH = sample(data_Pot1_no_out$pH,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_pH))
Arr_sample_SD[a] = c(sd(sample_pH))
Arr_sample_Mean[a] = c(mean(sample_pH))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_pH_Pot1_99_lower[b]= getCI(cl99,nsamples,Arr_sample_AVG[[b]])[1]
CI_pH_Pot1_99_upper[b]= getCI(cl99,nsamples,Arr_sample_AVG[[b]])[2]
CI_pH_Pot1_99_mean[b] = mean(Arr_sample_Mean[b])
}
CI_pH_Pot1_99 = data.frame(S_round,CI_pH_Pot1_99_mean,CI_pH_Pot1_99_lower,CI_pH_Pot1_99_upper)
qplot(
x = CI_pH_Pot1_99_mean,
y = S_round,
color = S_round,
data = CI_pH_Pot1_99,main = "Confidence Interval (CI) of Mean (99) : Average pH of Drinkable Water",
xlab = "Average pH",
ylab = "Round"
)+geom_errorbar(aes(xmin = CI_pH_Pot1_99_lower, xmax = CI_pH_Pot1_99_upper, width = 1)) + geom_vline(xintercept = pop_pot1_ph_mean)
###########################
## Confidence Interval 90 Turbidity : Potability = 0 ##
CI_turb_Pot0_90_mean = c()
CI_turb_Pot0_90_lower = c()
CI_turb_Pot0_90_upper = c()
Arr_sample_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_90_lower[b]= getCI(cl90,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_90_upper[b]= getCI(cl90,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_90_mean[b] = mean(Arr_sample_Mean[b])
}
CI_turb_Pot0_90 = data.frame(S_round,CI_turb_Pot0_90_mean,CI_turb_Pot0_90_lower,CI_turb_Pot0_90_upper)
qplot(
x =  CI_turb_Pot0_90_mean,
y = S_round,
color = S_round,
data =  CI_turb_Pot0_90,main = "Confidence Interval (CI) of Mean (90) : Average Turbidity of Non-Drinkable Water",
xlab = "Average Turbidity (NTU)",
ylab = "Round"
)+geom_errorbar(aes(xmin = CI_turb_Pot0_90_lower, xmax = CI_turb_Pot0_90_upper, width = 1)) + geom_vline(xintercept = pop_pot0_turb_mean)
## Confidence Interval 90 Turbidity : Potability = 1 ##
CI_turb_Pot1_90_mean = c()
CI_turb_Pot1_90_lower = c()
CI_turb_Pot1_90_upper = c()
Arr_sample_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot1_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot1_90_lower[b]= getCI(cl90,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot1_90_upper[b]= getCI(cl90,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot1_90_mean[b] = mean(Arr_sample_Mean[b])
}
CI_turb_Pot1_90 = data.frame(S_round,CI_turb_Pot1_90_mean,CI_turb_Pot1_90_lower,CI_turb_Pot1_90_upper)
qplot(
x =  CI_turb_Pot1_90_mean,
y = S_round,
color = S_round,
data =  CI_turb_Pot1_90,main = "Confidence Interval (CI) of Mean (90) : Average Turbidity of Drinkable Water",
xlab = "Average Turbidity (NTU)",
ylab = "Round"
)+geom_errorbar(aes(xmin = CI_turb_Pot1_90_lower, xmax = CI_turb_Pot1_90_upper, width = 1)) + geom_vline(xintercept = pop_pot1_turb_mean)
## Confidence Interval 95 Turbidity : Potability = 0 ##
CI_turb_Pot0_95_mean = c()
CI_turb_Pot0_95_lower = c()
CI_turb_Pot0_95_upper = c()
Arr_sample_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
CI_turb_Pot0_95 = data.frame(S_round,CI_turb_Pot0_95_mean,CI_turb_Pot0_95_lower,CI_turb_Pot0_95_upper)
qplot(
x =  CI_turb_Pot0_95_mean,
y = S_round,
color = S_round,
data =  CI_turb_Pot0_95,main = "Confidence Interval (CI) of Mean (95) : Average Turbidity of Non-Drinkable Water",
xlab = "Average Turbidity (NTU)",
ylab = "Round"
)+geom_errorbar(aes(xmin = CI_turb_Pot0_95_lower, xmax = CI_turb_Pot0_95_upper, width = 1)) + geom_vline(xintercept = pop_pot0_turb_mean)
## Confidence Interval 95 Turbidity : Potability = 1 ##
CI_turb_Pot1_95_mean = c()
CI_turb_Pot1_95_lower = c()
CI_turb_Pot1_95_upper = c()
Arr_sample_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot1_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
le_AVG = c()
Arr_sample_Mean = c()
Arr_sample_SD = c()
## random sample
for(a in 1:rounds){
sample_turb = sample(data_Pot0_no_out$Turbidity,nsamples)
Arr_sample_AVG[a] = c(data.frame(sample_turb))
Arr_sample_SD[a] = c(sd(sample_turb))
Arr_sample_Mean[a] = c(mean(sample_turb))
}
## assign array lower upper mean
for(b in 1:rounds){
CI_turb_Pot0_95_lower[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[1]
CI_turb_Pot0_95_upper[b]= getCI(cl95,nsamples,Arr_sample_AVG[[b]])[2]
CI_turb_Pot0_95_mean[b] = mean(Arr_sample_Mean[b])
}
